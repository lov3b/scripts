#!/usr/bin/env bash

set -euo pipefail
IFS=$'\n\t'

print_usage() {
  cat <<EOF
Usage: $(basename "$0") [OLD_EMAIL] [NEW_EMAIL]

Rewrite all commits and tags in the current Git repo, replacing OLD_EMAIL with NEW_EMAIL.

If OLD_EMAIL or NEW_EMAIL are omitted, you will be prompted interactively.
EOF
}

if [[ "${1:-}" =~ ^-h|--help$ ]]; then
  print_usage
  exit 0
fi

if ! git rev-parse --git-dir &>/dev/null; then
  echo "Error: this script must be run inside a Git repository." >&2
  exit 1
fi

# Get email
if [ -n "${1:-}" ]; then
  OLD_EMAIL="$1"
else
  read -rp "Enter the old email to replace: " OLD_EMAIL
fi
if [ -n "${2:-}" ]; then
  NEW_EMAIL="$2"
else
  read -rp "Enter the new (correct) email: " NEW_EMAIL
fi

cat <<EOF

Rewriting Git history: replacing
  OLD_EMAIL = $OLD_EMAIL
  NEW_EMAIL = $NEW_EMAIL

EOF

read -rp "Are you sure you want to proceed? (y/N) " CONFIRM
if [[ "$CONFIRM" != "y" && "$CONFIRM" != "Y" ]]; then
  echo "Aborting."
  exit 1
fi

FILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --env-filter "
if [ \"\$GIT_COMMITTER_EMAIL\" = '$OLD_EMAIL' ]; then
    export GIT_COMMITTER_EMAIL='$NEW_EMAIL'
fi
if [ \"\$GIT_AUTHOR_EMAIL\" = '$OLD_EMAIL' ]; then
    export GIT_AUTHOR_EMAIL='$NEW_EMAIL'
fi
" --tag-name-filter cat -- --branches --tags

echo -e "\nDone: all commits and tags updated."
